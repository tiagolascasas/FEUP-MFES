class Node

types
	public Location = seq1 of (char)

instance variables
  public priority:real;
  public coordinateNS:real;
  public coordinateEW:real;
  public location:Location;
  public outwardEdges:set of (Edge);
  public path:Node;
  public processed:bool;

operations

  -- constructor of Node
	public Node : real * real * Location ==> Node
	Node(cdNS, cdEW, loc) ==
	(
		priority := 9999999999;	--change later
		coordinateNS := cdNS;
		coordinateEW := cdEW;
		location := loc;
		outwardEdges := {};
		processed := false;
		return self;
	)
	pre cdNS >= -90.0 and
			 cdNS <= 90.0 and
			 cdEW >= -180.0 and
			 cdEW <= 180.0;
	
	public setPriority : real ==> ()
	setPriority(pri) ==
		priority := pri
	pre pri >= 0.0 and pri <= 9999999999;
	
	public setPath : Node ==> ()
	setPath(n) ==
	  path := n;
	  
	public setProcessed : bool ==> ()
	setProcessed(p) ==
	  processed := p;
	
	public addEdge : Edge ==> ()
	addEdge(edge) ==
	  outwardEdges := {edge} union outwardEdges;
		
end Node
